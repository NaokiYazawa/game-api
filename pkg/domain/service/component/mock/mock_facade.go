// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/domain/service/component/facade.go

// Package mock_facade is a generated GoMock package.
package mock_facade

import (
	reward "game-api/pkg/domain/dto/reward"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockFacade is a mock of Facade interface.
type MockFacade struct {
	ctrl     *gomock.Controller
	recorder *MockFacadeMockRecorder
}

// MockFacadeMockRecorder is the mock recorder for MockFacade.
type MockFacadeMockRecorder struct {
	mock *MockFacade
}

// NewMockFacade creates a new mock instance.
func NewMockFacade(ctrl *gomock.Controller) *MockFacade {
	mock := &MockFacade{ctrl: ctrl}
	mock.recorder = &MockFacadeMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFacade) EXPECT() *MockFacadeMockRecorder {
	return m.recorder
}

// ChooseByRatio mocks base method.
func (m *MockFacade) ChooseByRatio(rewards reward.Rewards, times int32) (reward.Rewards, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ChooseByRatio", rewards, times)
	ret0, _ := ret[0].(reward.Rewards)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ChooseByRatio indicates an expected call of ChooseByRatio.
func (mr *MockFacadeMockRecorder) ChooseByRatio(rewards, times interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ChooseByRatio", reflect.TypeOf((*MockFacade)(nil).ChooseByRatio), rewards, times)
}
